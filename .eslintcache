[{"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\index.js":"1","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\App.js":"2","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Header.js":"3","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Footer.js":"4","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Content.js":"5","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\services\\blogs.js":"6","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogCard.js":"7","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogView.js":"8","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Comments.js":"9","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\services\\auth.js":"10","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Login.js":"11","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Registration.js":"12","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\contexts\\UserContext.js":"13","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Notification.js":"14","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\contexts\\NotificationContext.js":"15","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Profile.js":"16","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Test.js":"17","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogForm.js":"18","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\index.js":"19","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\App.js":"20","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\contexts\\NotificationContext.js":"21","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\contexts\\UserContext.js":"22","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Header.js":"23","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogView.js":"24","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Content.js":"25","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Login.js":"26","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Footer.js":"27","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Registration.js":"28","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Profile.js":"29","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogForm.js":"30","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Test.js":"31","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Notification.js":"32","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\blogs.js":"33","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Comments.js":"34","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogCard.js":"35","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\auth.js":"36","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\CustomFields.js":"37","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\NotificationTest.js":"38","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogEditForm.js":"39","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\ConfirmationDialog.js":"40","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\user.js":"41","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\utils\\index.js":"42"},{"size":369,"mtime":1614308827789,"results":"43","hashOfConfig":"44"},{"size":3172,"mtime":1614379410780,"results":"45","hashOfConfig":"44"},{"size":2834,"mtime":1614379407761,"results":"46","hashOfConfig":"44"},{"size":1003,"mtime":1612845149094,"results":"47","hashOfConfig":"44"},{"size":458,"mtime":1613162273629,"results":"48","hashOfConfig":"44"},{"size":1289,"mtime":1612817341201,"results":"49","hashOfConfig":"44"},{"size":2600,"mtime":1613593484974,"results":"50","hashOfConfig":"44"},{"size":3882,"mtime":1614374778385,"results":"51","hashOfConfig":"44"},{"size":747,"mtime":1613009809202,"results":"52","hashOfConfig":"44"},{"size":383,"mtime":1613701871817,"results":"53","hashOfConfig":"44"},{"size":5058,"mtime":1614309346952,"results":"54","hashOfConfig":"44"},{"size":4641,"mtime":1614208764277,"results":"55","hashOfConfig":"44"},{"size":91,"mtime":1614127804721,"results":"56","hashOfConfig":"44"},{"size":1551,"mtime":1614312959707,"results":"57","hashOfConfig":"44"},{"size":1210,"mtime":1614317690484,"results":"58","hashOfConfig":"44"},{"size":109,"mtime":1614204847267,"results":"59","hashOfConfig":"44"},{"size":3010,"mtime":1614308787155,"results":"60","hashOfConfig":"44"},{"size":120,"mtime":1614379455626,"results":"61","hashOfConfig":"44"},{"size":369,"mtime":1614308827789,"results":"62","hashOfConfig":"63"},{"size":4274,"mtime":1615365313509,"results":"64","hashOfConfig":"63"},{"size":1253,"mtime":1615263546137,"results":"65","hashOfConfig":"63"},{"size":91,"mtime":1614127804721,"results":"66","hashOfConfig":"63"},{"size":3749,"mtime":1615396067695,"results":"67","hashOfConfig":"63"},{"size":7484,"mtime":1615365659570,"results":"68","hashOfConfig":"63"},{"size":676,"mtime":1615359023288,"results":"69","hashOfConfig":"63"},{"size":4860,"mtime":1615365444781,"results":"70","hashOfConfig":"63"},{"size":1003,"mtime":1612845149094,"results":"71","hashOfConfig":"63"},{"size":5370,"mtime":1615365429199,"results":"72","hashOfConfig":"63"},{"size":2883,"mtime":1615365340088,"results":"73","hashOfConfig":"63"},{"size":3703,"mtime":1615360451409,"results":"74","hashOfConfig":"63"},{"size":3010,"mtime":1614308787155,"results":"75","hashOfConfig":"63"},{"size":1786,"mtime":1615263539284,"results":"76","hashOfConfig":"63"},{"size":1521,"mtime":1615162797174,"results":"77","hashOfConfig":"63"},{"size":886,"mtime":1615359462947,"results":"78","hashOfConfig":"63"},{"size":4423,"mtime":1615396190156,"results":"79","hashOfConfig":"63"},{"size":383,"mtime":1613701871817,"results":"80","hashOfConfig":"63"},{"size":1320,"mtime":1615262475347,"results":"81","hashOfConfig":"63"},{"size":626,"mtime":1614888756965,"results":"82","hashOfConfig":"63"},{"size":1763,"mtime":1615163707680,"results":"83","hashOfConfig":"63"},{"size":3119,"mtime":1615174000537,"results":"84","hashOfConfig":"63"},{"size":500,"mtime":1615242744971,"results":"85","hashOfConfig":"63"},{"size":828,"mtime":1615361169976,"results":"86","hashOfConfig":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"hmgl1",{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"1eml9ws",{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"131"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"131"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"131"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"131"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"131"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"131"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"131"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"131"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"131"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"131"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"131"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\index.js",[],["190","191"],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\App.js",["192","193","194","195","196","197"],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Header.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Footer.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Content.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\services\\blogs.js",["198"],"import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAllBlogs = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getIdBlog = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst postBlog = async (blog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, blog, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nconst likeBlog = async (id, likes) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, likes);\r\n  return response.data;\r\n};\r\n\r\nconst commentBlog = async (id, comment) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(\r\n    `${baseUrl}/${id}/comments`,\r\n    comment,\r\n    config\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getAllBlogs,\r\n  getIdBlog,\r\n  postBlog,\r\n  deleteBlog,\r\n  likeBlog,\r\n  commentBlog,\r\n};\r\n","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogCard.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogView.js",["199","200","201"],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Comments.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\services\\auth.js",["202"],"import axios from 'axios';\r\nconst baseUrl = '/auth';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(`${baseUrl}/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (credentials) => {\r\n  const response = await axios.post(`${baseUrl}/register`, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login, register };\r\n","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Login.js",["203","204","205"],"import React, { useState, useContext } from 'react';\r\nimport { Formik, Field, Form, useField } from 'formik';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport authService from '../services/auth';\r\nimport blogService from '../services/blogs';\r\nimport * as yup from 'yup';\r\nimport MyTextField from './MyTextField';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\n\r\n//TODO ------------------------------------------------\r\n//tie in remember me function\r\n//-----------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1.5, 0, 2),\r\n  },\r\n}));\r\n\r\nconst MyCheckBox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      {...field}\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string().required('Username Required'),\r\n  password: yup.string().required('Password Required'),\r\n});\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { dispatchNotification } = useNotification();\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{ username: '', password: '', remember: false }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={async (values) => {\r\n            try {\r\n              const user = await authService.login({\r\n                username: values.username,\r\n                password: values.password,\r\n              });\r\n              window.localStorage.setItem('blogAppUser', JSON.stringify(user));\r\n              setUser(user);\r\n              blogService.setToken(user.token);\r\n              history.push('/');\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  severity: 'success',\r\n                  message: `${user.username} logged in`,\r\n                },\r\n              });\r\n            } catch (err) {\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  severity: 'error',\r\n                  message: err.response.data.error,\r\n                },\r\n              });\r\n              console.log(err.response.data.error);\r\n            }\r\n          }}\r\n        >\r\n          {({ values, errors, isSubmitting }) => (\r\n            <Form className={classes.form}>\r\n              <MyTextField name=\"username\" label=\"Username\" type=\"input\" />\r\n              <MyTextField name=\"password\" label=\"Password\" type=\"password\" />\r\n\r\n              <pre>{JSON.stringify(values, null, 2)}</pre>\r\n              <pre>{JSON.stringify(errors, null, 2)}</pre>\r\n              <MyCheckBox name=\"remember\" type=\"checkbox\" label=\"Remember me\" />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Registration.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\contexts\\UserContext.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Notification.js",["206"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport const Notification = ({ notification }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState();\r\n  const { id, message, severity } = notification;\r\n\r\n  useEffect(() => {\r\n    setOpen(notification.open);\r\n  }, [notification]);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        key={id}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <Alert severity={severity}>{message}</Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\contexts\\NotificationContext.js",["207"],"import React, { createContext, useMemo, useContext, useReducer } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Notification from '../components/Notification';\r\n\r\nexport const NotificationContext = createContext();\r\n\r\nconst initialState = {\r\n  message: '',\r\n  open: false,\r\n};\r\n\r\nexport const notificationReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return {\r\n        id: new Date().getTime() + Math.random(),\r\n        message: action.data.message,\r\n        severity: action.data.severity,\r\n        open: true,\r\n      };\r\n    case 'REMOVE':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const NotificationProvider = (props) => {\r\n  const [notification, dispatchNotification] = useReducer(\r\n    notificationReducer,\r\n    initialState\r\n  );\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, dispatchNotification }}\r\n    >\r\n      {props.children}\r\n      {createPortal(\r\n        <Notification notification={notification} />,\r\n        document.body\r\n      )}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  return useContext(NotificationContext);\r\n};\r\n","C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Profile.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\Test.js",[],"C:\\Users\\Brian\\Desktop\\Capstone\\blog-app-frontend\\src\\components\\BlogForm.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\index.js",[],["208","209"],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\App.js",["210","211","212","213","214"],"import React, { useState, useEffect, useContext, useMemo } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Content from './components/Content';\nimport blogService from './services/blogs';\nimport userService from './services/user';\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom';\nimport BlogView from './components/BlogView';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport { UserContext } from './contexts/UserContext';\nimport Profile from './components/Profile';\nimport Test from './components/Test';\nimport { useNotification } from './contexts/NotificationContext';\nimport BlogForm from './components/BlogForm';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const userProvider = useMemo(() => ({ user, setUser }), [user, setUser]);\n  const { dispatchNotification } = useNotification();\n\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('blogAppUser');\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const blogs = await blogService.getAllBlogs();\n        setBlogs(blogs);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchBlogs();\n  }, []);\n\n  const handleLikes = async (id, likes) => {\n    const likedBlog = await blogService.likeBlog(id, { likes });\n    setBlogs(blogs.map((blog) => (blog.id !== id ? blog : likedBlog)));\n  };\n\n  const handleComment = async (id, comment) => {\n    const commentedBlog = await blogService.commentBlog(id, comment);\n    setBlogs(blogs.map((blog) => (blog.id !== id ? blog : commentedBlog)));\n  };\n\n  const handleBlogSubmission = async (blog) => {\n    const newBlog = await blogService.postBlog(blog);\n    setBlogs(blogs.concat(newBlog));\n    return newBlog;\n  };\n\n  const handleEdit = async (id, content) => {\n    const edittedBlog = await blogService.editBlog(id, { content });\n    console.log('Editted Blog Below');\n    console.log(edittedBlog);\n    setBlogs(blogs.map((blog) => (blog.id !== id ? blog : edittedBlog)));\n  };\n\n  const handleDelete = async (id) => {\n    await blogService.deleteBlog(id);\n    setBlogs(blogs.filter((blog) => blog.id !== id));\n  };\n\n  const match = useRouteMatch('/blogs/:id');\n  const blog = match ? blogs.find((blog) => blog.id === match.params.id) : null;\n\n  return (\n    <>\n      <UserContext.Provider value={userProvider}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Header />\n          </Grid>\n          <Grid item container>\n            <Grid item xs={false} sm={2} />\n            <Grid item xs={12} sm={8}>\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Content blogs={blogs} handleLikes={handleLikes} />\n                </Route>\n                <Route path=\"/blogs/:id\">\n                  <BlogView\n                    blog={blog}\n                    handleLikes={handleLikes}\n                    handleComment={handleComment}\n                    handleEdit={handleEdit}\n                    handleDelete={handleDelete}\n                  />\n                </Route>\n                <Route path=\"/submit\">\n                  {window.localStorage.getItem('blogAppUser') ? (\n                    <BlogForm handleBlogSubmission={handleBlogSubmission} />\n                  ) : (\n                    <Redirect to=\"/login\" />\n                  )}\n                </Route>\n                <Route path={'/user/:username'}>\n                  <Profile handleLikes={handleLikes} />\n                </Route>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/register\">\n                  <Registration />\n                </Route>\n                <Route path=\"/\">\n                  <div>404</div>\n                </Route>\n              </Switch>\n            </Grid>\n            <Grid item xs={false} sm={2} />\n          </Grid>\n        </Grid>\n      </UserContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\contexts\\NotificationContext.js",["215"],"import React, { createContext, useMemo, useContext, useReducer } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Notification from '../components/Notification';\r\n\r\nexport const NotificationContext = createContext();\r\n\r\nconst initialState = {\r\n  message: '',\r\n  open: false,\r\n};\r\n\r\nexport const notificationReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return {\r\n        id: new Date().getTime() + Math.random(),\r\n        message: action.data.message,\r\n        severity: action.data.severity,\r\n        open: true,\r\n        timer: action.data.timer || 2000,\r\n      };\r\n    case 'REMOVE':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const NotificationProvider = (props) => {\r\n  const [notification, dispatchNotification] = useReducer(\r\n    notificationReducer,\r\n    initialState\r\n  );\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, dispatchNotification }}\r\n    >\r\n      {props.children}\r\n      {createPortal(\r\n        <Notification notification={notification} />,\r\n        document.body\r\n      )}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotification = () => {\r\n  return useContext(NotificationContext);\r\n};\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\contexts\\UserContext.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Header.js",["216","217"],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogView.js",["218","219","220","221"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport Comments from './Comments';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Divider, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport blogService from '../services/blogs';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport BlogEditForm from './BlogEditForm';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\nimport { dateFormatter } from '../utils/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n  },\r\n  content: {\r\n    minHeight: '100px',\r\n  },\r\n  buttons: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  headerRight: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));\r\n\r\nconst BlogView = ({\r\n  blog,\r\n  handleLikes,\r\n  handleComment,\r\n  handleEdit,\r\n  handleDelete,\r\n}) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { user } = useContext(UserContext);\r\n  const [fields, setFields] = useState('');\r\n  const { dispatchNotification } = useNotification();\r\n  const [editBlog, setEdit] = useState(false);\r\n  const [deleteBlog, setDelete] = useState(false);\r\n\r\n  if (!blog) {\r\n    return (\r\n      <div className={classes.loading}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const checkBlogAuth = (user, authorId) => {\r\n    if (user) {\r\n      return user.id === authorId ? true : false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const closeEditForm = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const closeDeleteDialog = () => {\r\n    setDelete(false);\r\n  };\r\n\r\n  const { title, author, authorId, comments, created, likes, content, id } = blog; //prettier-ignore\r\n\r\n  const setNotification = (severity, message) => {\r\n    dispatchNotification({\r\n      type: 'ADD',\r\n      data: {\r\n        severity: severity,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const comment = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      if (fields.trim() === '') {\r\n        return;\r\n      }\r\n      setNotification('success', 'Commented on Post');\r\n      await handleComment(id, { comment: fields });\r\n      setFields('');\r\n    } catch (err) {\r\n      setNotification('error', 'Failed to Comment on Post');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const share = () => {\r\n    const link = window.location.href;\r\n    navigator.clipboard.writeText(link);\r\n    setNotification('success', 'Copied link to blog!');\r\n  };\r\n\r\n  const nonUserRedirect = () => {\r\n    setNotification('warning', 'Must login to comment');\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={3} variant=\"outlined\" className={classes.paper}>\r\n        <Grid container spacing={2} direction=\"column\" className={classes.root}>\r\n          <Grid item className={classes.header}>\r\n            <div>\r\n              <Typography variant=\"h2\">{title}</Typography>\r\n              <Typography>{`${dateFormatter(\r\n                created\r\n              )} by ${author}`}</Typography>\r\n            </div>\r\n\r\n            <Typography variant=\"h3\" className={classes.headerRight}>\r\n              {likes}\r\n              <FavoriteIcon\r\n                fontSize=\"large\"\r\n                color=\"secondary\"\r\n                className={classes.buttons}\r\n              />\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Divider />\r\n          <Grid item className={classes.content}>\r\n            {editBlog ? (\r\n              <BlogEditForm\r\n                currentContent={content}\r\n                closeEditForm={closeEditForm}\r\n                handleEdit={handleEdit}\r\n                id={id}\r\n              />\r\n            ) : (\r\n              <Typography>{content}</Typography>\r\n            )}\r\n          </Grid>\r\n          <Grid item container direction=\"row\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<FavoriteIcon />}\r\n              className={classes.buttons}\r\n              onClick={() => handleLikes(id, likes + 1)}\r\n            >\r\n              Like\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<ShareIcon />}\r\n              className={classes.buttons}\r\n              onClick={share}\r\n            >\r\n              Share\r\n            </Button>\r\n\r\n            {checkBlogAuth(user, authorId) && (\r\n              <>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<EditIcon />}\r\n                  className={classes.buttons}\r\n                  onClick={() => setEdit(true)}\r\n                >\r\n                  Edit Post\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<DeleteForeverIcon />}\r\n                  className={classes.buttons}\r\n                  onClick={() => setDelete(true)}\r\n                >\r\n                  Delete Post\r\n                </Button>\r\n              </>\r\n            )}\r\n\r\n            <ConfirmationDialog\r\n              open={deleteBlog}\r\n              handleClose={closeDeleteDialog}\r\n              handleDelete={handleDelete}\r\n              id={id}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            {fields}\r\n            <TextField\r\n              id=\"filled-full-width\"\r\n              label={user ? `Comment as ${user.username}` : 'Login to comment'}\r\n              placeholder=\"Write a Comment\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              multiline\r\n              rows={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              variant=\"filled\"\r\n              value={fields}\r\n              onChange={({ target }) => setFields(target.value)}\r\n            />\r\n            <Fab\r\n              onClick={user ? comment : nonUserRedirect}\r\n              color=\"primary\"\r\n              variant=\"extended\"\r\n              aria-label=\"comment\"\r\n            >\r\n              <ChatBubbleIcon className={classes.extendedIcon} />\r\n              Comment\r\n            </Fab>\r\n          </Grid>\r\n          <Typography variant=\"h5\">Comments</Typography>\r\n          <Grid item>\r\n            {comments.map((comment) => (\r\n              <Comments key={comment._id} commentObj={comment} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogView;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Content.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Login.js",["222","223","224","225","226","227"],"import React, { useState, useContext } from 'react';\r\nimport { Formik, Field, Form, useField } from 'formik';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport authService from '../services/auth';\r\nimport blogService from '../services/blogs';\r\nimport * as yup from 'yup';\r\nimport { MyTextField, MyCheckBox } from './CustomFields';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\n\r\n//TODO ------------------------------------------------\r\n//tie in remember me function\r\n//-----------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1.5, 0, 2),\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string().required('Username Required'),\r\n  password: yup.string().required('Password Required'),\r\n});\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { dispatchNotification } = useNotification();\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{ username: '', password: '', remember: false }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={async (values) => {\r\n            try {\r\n              const user = await authService.login({\r\n                username: values.username,\r\n                password: values.password,\r\n              });\r\n              window.localStorage.setItem('blogAppUser', JSON.stringify(user));\r\n              setUser(user);\r\n              blogService.setToken(user.token);\r\n              history.push('/');\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  severity: 'success',\r\n                  message: `${user.username} logged in`,\r\n                },\r\n              });\r\n            } catch (err) {\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  severity: 'error',\r\n                  message: err.response.data.error,\r\n                },\r\n              });\r\n              console.log(err.response.data.error);\r\n            }\r\n          }}\r\n        >\r\n          {({ values, errors, isSubmitting }) => (\r\n            <Form className={classes.form}>\r\n              <MyTextField name=\"username\" label=\"Username\" type=\"input\" />\r\n              <MyTextField name=\"password\" label=\"Password\" type=\"password\" />\r\n\r\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n              <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n              <MyCheckBox name=\"remember\" type=\"checkbox\" label=\"Remember me\" />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Footer.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Registration.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Profile.js",["228","229","230","231"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport userService from '../services/user';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\nimport { dateFormatter, usernameColor } from '../utils/index';\r\nimport Content from './Content';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  testing: {\r\n    border: '1px solid red',\r\n  },\r\n}));\r\n//TODO -- User Not Found\r\nconst Profile = ({ handleLikes }) => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(null);\r\n  const { dispatchNotification } = useNotification();\r\n  const match = useRouteMatch('/user/:username');\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [match.params.username]);\r\n\r\n  console.log(user);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const user = await userService.getUsernameUser(match.params.username);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatchNotification({\r\n        type: 'ADD',\r\n        data: {\r\n          severity: 'error',\r\n          message: 'Failed to retrieve profile',\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className={classes.loading}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { blogs, created, email, id, username } = user;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={false} sm={2} />\r\n\r\n      <Grid item xs={12} sm={8}>\r\n        <Paper className={classes.main}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{ backgroundColor: usernameColor(username, 30, 80) }}\r\n          >\r\n            {username.charAt(0)}\r\n          </Avatar>\r\n          <Typography variant=\"h2\" component=\"h1\">\r\n            {username}\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h6\">{`User since ${dateFormatter(\r\n              created\r\n            )}`}</Typography>\r\n            <Typography variant=\"h6\">{`Total Posts: ${blogs.length}`}</Typography>\r\n          </div>\r\n        </Paper>\r\n        <Content blogs={blogs} handleLikes={handleLikes} />\r\n      </Grid>\r\n\r\n      <Grid item xs={false} sm={2} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst UserNotFound = () => {\r\n  <div>User Not Found</div>;\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogForm.js",["232","233","234","235"],"import React, { useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Formik, Form } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { MyTextField, MyTextArea } from './CustomFields';\r\nimport blogService from '../services/blogs';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#2a9d8f',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst blogSubmissionSchema = yup.object({\r\n  title: yup\r\n    .string()\r\n    .required('Blog Title Required')\r\n    .max(100, 'Title must be less than 100 characters'),\r\n  content: yup.string().optional(),\r\n});\r\n\r\nconst BlogForm = ({ handleBlogSubmission }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { dispatchNotification } = useNotification();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <BorderColorIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Write a post\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{ title: '', content: '' }}\r\n          validationSchema={blogSubmissionSchema}\r\n          onSubmit={async (values) => {\r\n            try {\r\n              const newBlog = await handleBlogSubmission(values);\r\n              history.push(`/blogs/${newBlog.id}`);\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  message: 'Blog Created',\r\n                  severity: 'success',\r\n                },\r\n              });\r\n            } catch (error) {\r\n              dispatchNotification({\r\n                type: 'ADD',\r\n                data: {\r\n                  open: true,\r\n                  message: 'Blog Creation Failed',\r\n                  severity: 'error',\r\n                },\r\n              });\r\n              console.error(error);\r\n            }\r\n          }}\r\n        >\r\n          {({ values, errors, isSubmitting }) => (\r\n            <Form className={classes.form}>\r\n              <MyTextField name=\"title\" label=\"Title\" type=\"input\" />\r\n\r\n              <MyTextArea\r\n                name=\"content\"\r\n                label=\"Content (Optional)\"\r\n                type=\"input\"\r\n              />\r\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre>\r\n              <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={isSubmitting}\r\n              >\r\n                Post\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogForm;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Test.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Notification.js",["236"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\nexport const Notification = ({ notification }) => {\r\n  //testing this below\r\n  // if(notification.message === '') {\r\n  //   return null;\r\n  // }\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState();\r\n  const { id, message, severity, timer } = notification;\r\n\r\n  useEffect(() => {\r\n    setOpen(notification.open);\r\n  }, [notification]);\r\n\r\n  useEffect(() => {\r\n    console.log('Mounted Notfication');\r\n    return () => console.log('Unmounted Notification');\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        key={id}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={timer}\r\n        onClose={handleClose}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <Alert severity={severity}>{message}</Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\blogs.js",["237"],"import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAllBlogs = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getIdBlog = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst postBlog = async (blog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.post(baseUrl, blog, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nconst likeBlog = async (id, likes) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, likes);\r\n  return response.data;\r\n};\r\n\r\nconst commentBlog = async (id, comment) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(\r\n    `${baseUrl}/${id}/comments`,\r\n    comment,\r\n    config\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst editBlog = async (id, content) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(`${baseUrl}/${id}/edit`, content, config);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getAllBlogs,\r\n  getIdBlog,\r\n  postBlog,\r\n  deleteBlog,\r\n  likeBlog,\r\n  commentBlog,\r\n  editBlog,\r\n};\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\Comments.js",["238"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { dateFormatter } from '../utils/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Comments = ({ commentObj }) => {\r\n  const { comment, timestamp, username } = commentObj;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar aria-label=\"avatar\">{username.charAt(0)}</Avatar>}\r\n        title={username}\r\n        subheader={dateFormatter(timestamp)}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {comment}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogCard.js",["239","240","241"],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\auth.js",["242"],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\CustomFields.js",["243"],"import TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useField } from 'formik';\r\n\r\nexport const MyTextField = ({ label, type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      fullWidth\r\n      required\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      label={label}\r\n      type={type}\r\n    />\r\n  );\r\n};\r\n\r\nexport const MyCheckBox = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FormControlLabel\r\n      {...field}\r\n      control={<Checkbox color=\"primary\" />}\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport const MyTextArea = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      label={label}\r\n      multiline\r\n      rows={6}\r\n    />\r\n  );\r\n};\r\n\r\nexport default { MyTextField, MyTextArea, MyCheckBox };\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\NotificationTest.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\BlogEditForm.js",["244","245"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const BlogEditForm = ({\r\n  currentContent,\r\n  closeEditForm,\r\n  handleEdit,\r\n  id,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [editField, setEditField] = useState(currentContent);\r\n  const { dispatchNotification } = useNotification();\r\n\r\n  const edit = async (e) => {\r\n    e.preventDefault();\r\n    if (currentContent == editField) return;\r\n    try {\r\n      await handleEdit(id, editField);\r\n      dispatchNotification({\r\n        type: 'ADD',\r\n        data: {\r\n          severity: 'success',\r\n          message: 'Blog Successfully Editted',\r\n        },\r\n      });\r\n      closeEditForm();\r\n    } catch (error) {\r\n      dispatchNotification({\r\n        type: 'ADD',\r\n        data: {\r\n          severity: 'error',\r\n          message: 'Failed to edit Blog',\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        multiline\r\n        rows={6}\r\n        value={editField}\r\n        fullWidth\r\n        onChange={({ target }) => setEditField(target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={closeEditForm}>\r\n        Cancel\r\n      </Button>\r\n      <Button\r\n        disabled={currentContent === editField}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={edit}\r\n      >\r\n        Save Changes\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogEditForm;\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\components\\ConfirmationDialog.js",[],"C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\services\\user.js",["246"],"import axios from 'axios';\r\nconst baseUrl = '/api/user';\r\n\r\nconst getAllUsers = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst getIdUser = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/id/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst getUsernameUser = async (username) => {\r\n  const response = await axios.get(`${baseUrl}/${username}`);\r\n  return response.data;\r\n};\r\n\r\nexport default { getAllUsers, getIdUser, getUsernameUser };\r\n","C:\\Users\\Brian\\desktop\\capstone\\blog-app-frontend\\src\\utils\\index.js",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":38,"nodeType":"253","messageId":"254","endLine":1,"endColumn":48},{"ruleId":"251","severity":1,"message":"255","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":14},{"ruleId":"251","severity":1,"message":"256","line":7,"column":40,"nodeType":"253","messageId":"254","endLine":7,"endColumn":48},{"ruleId":"251","severity":1,"message":"257","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":15},{"ruleId":"251","severity":1,"message":"258","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":12},{"ruleId":"251","severity":1,"message":"259","line":21,"column":11,"nodeType":"253","messageId":"254","endLine":21,"endColumn":31},{"ruleId":"260","severity":1,"message":"261","line":53,"column":1,"nodeType":"262","endLine":61,"endColumn":3},{"ruleId":"251","severity":1,"message":"263","line":1,"column":39,"nodeType":"253","messageId":"254","endLine":1,"endColumn":48},{"ruleId":"251","severity":1,"message":"264","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":23},{"ruleId":"251","severity":1,"message":"265","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":14,"column":1,"nodeType":"262","endLine":14,"endColumn":36},{"ruleId":"251","severity":1,"message":"266","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"267","line":2,"column":18,"nodeType":"253","messageId":"254","endLine":2,"endColumn":23},{"ruleId":"251","severity":1,"message":"268","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":17},{"ruleId":"251","severity":1,"message":"269","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"251","severity":1,"message":"270","line":1,"column":32,"nodeType":"253","messageId":"254","endLine":1,"endColumn":39},{"ruleId":"247","replacedBy":"271"},{"ruleId":"249","replacedBy":"272"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":38,"nodeType":"253","messageId":"254","endLine":1,"endColumn":48},{"ruleId":"251","severity":1,"message":"255","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":14},{"ruleId":"251","severity":1,"message":"273","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":19},{"ruleId":"251","severity":1,"message":"258","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":12},{"ruleId":"251","severity":1,"message":"259","line":22,"column":11,"nodeType":"253","messageId":"254","endLine":22,"endColumn":31},{"ruleId":"251","severity":1,"message":"270","line":1,"column":32,"nodeType":"253","messageId":"254","endLine":1,"endColumn":39},{"ruleId":"251","severity":1,"message":"274","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":8,"endColumn":13},{"ruleId":"275","severity":1,"message":"276","line":80,"column":13,"nodeType":"277","endLine":80,"endColumn":46},{"ruleId":"251","severity":1,"message":"263","line":1,"column":39,"nodeType":"253","messageId":"254","endLine":1,"endColumn":48},{"ruleId":"251","severity":1,"message":"265","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":19},{"ruleId":"251","severity":1,"message":"278","line":19,"column":8,"nodeType":"253","messageId":"254","endLine":19,"endColumn":14},{"ruleId":"251","severity":1,"message":"279","line":21,"column":8,"nodeType":"253","messageId":"254","endLine":21,"endColumn":21},{"ruleId":"251","severity":1,"message":"266","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"267","line":2,"column":18,"nodeType":"253","messageId":"254","endLine":2,"endColumn":23},{"ruleId":"251","severity":1,"message":"280","line":2,"column":31,"nodeType":"253","messageId":"254","endLine":2,"endColumn":39},{"ruleId":"251","severity":1,"message":"281","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":24},{"ruleId":"251","severity":1,"message":"268","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":17},{"ruleId":"251","severity":1,"message":"282","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":43,"column":6,"nodeType":"285","endLine":43,"endColumn":29,"suggestions":"286"},{"ruleId":"251","severity":1,"message":"287","line":71,"column":27,"nodeType":"253","messageId":"254","endLine":71,"endColumn":32},{"ruleId":"251","severity":1,"message":"288","line":71,"column":34,"nodeType":"253","messageId":"254","endLine":71,"endColumn":36},{"ruleId":"251","severity":1,"message":"289","line":103,"column":7,"nodeType":"253","messageId":"254","endLine":103,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"290","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":12},{"ruleId":"251","severity":1,"message":"291","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":13},{"ruleId":"251","severity":1,"message":"265","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":19},{"ruleId":"251","severity":1,"message":"269","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":61,"column":1,"nodeType":"262","endLine":70,"endColumn":3},{"ruleId":"251","severity":1,"message":"292","line":8,"column":10,"nodeType":"253","messageId":"254","endLine":8,"endColumn":20},{"ruleId":"251","severity":1,"message":"293","line":16,"column":25,"nodeType":"253","messageId":"254","endLine":16,"endColumn":36},{"ruleId":"251","severity":1,"message":"294","line":18,"column":8,"nodeType":"253","messageId":"254","endLine":18,"endColumn":15},{"ruleId":"251","severity":1,"message":"295","line":19,"column":10,"nodeType":"253","messageId":"254","endLine":19,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":14,"column":1,"nodeType":"262","endLine":14,"endColumn":36},{"ruleId":"260","severity":1,"message":"261","line":53,"column":1,"nodeType":"262","endLine":53,"endColumn":56},{"ruleId":"251","severity":1,"message":"296","line":19,"column":9,"nodeType":"253","messageId":"254","endLine":19,"endColumn":16},{"ruleId":"297","severity":1,"message":"298","line":25,"column":24,"nodeType":"299","messageId":"300","endLine":25,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":19,"column":1,"nodeType":"262","endLine":19,"endColumn":60},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Redirect' is defined but never used.","'Profile' is defined but never used.","'Test' is defined but never used.","'dispatchNotification' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useRouteMatch' is defined but never used.","'blogService' is defined but never used.","'useState' is defined but never used.","'Field' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'useMemo' is defined but never used.",["301"],["302"],"'userService' is defined but never used.","'withStyles' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Avatar' is defined but never used.","'AccountCircle' is defined but never used.","'useField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["303"],"'email' is assigned a value but never used.","'id' is assigned a value but never used.","'UserNotFound' is assigned a value but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'makeStyles' is defined but never used.","'randomColor' is defined but never used.","'Divider' is defined but never used.","'Hidden' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},"Update the dependencies array to be: [getUser, match.params.username]",{"range":"306","text":"307"},[1313,1336],"[getUser, match.params.username]"]